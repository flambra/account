{
    "swagger": "2.0",
    "info": {
        "description": "This API is for the Flambra Account service.",
        "title": "Flambra Account API",
        "contact": {}
    },
    "paths": {
        "/auth/createuser": {
            "get": {
                "description": "Create a Token for Create User",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Create a Token",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hToken.Access"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    }
                }
            }
        },
        "/auth/refreshtoken": {
            "post": {
                "description": "Refresh an access token using a refresh token",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Refresh an access token",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003caccess token\u003e",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "Refresh Token Request",
                        "name": "request",
                        "in": "body",
                        "schema": {
                            "$ref": "#/definitions/hToken.Access"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hToken.Access"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    }
                }
            }
        },
        "/auth/signin": {
            "post": {
                "description": "Sign in a user with email and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Sign in a user",
                "parameters": [
                    {
                        "description": "Auth Sign In Request",
                        "name": "auth",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.AuthSignInRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Access token generated successfully",
                        "schema": {
                            "$ref": "#/definitions/hToken.Access"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    }
                }
            }
        },
        "/auth/twofactor/send": {
            "post": {
                "description": "Send a 2FA code to the user's email or phone",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Send 2FA code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003caccess token\u003e",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "TwoFactor Generate Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.AuthTwoFactorGenerateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "2FA code sent successfully",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    }
                }
            }
        },
        "/auth/twofactor/validate": {
            "post": {
                "description": "Validate the 2FA code provided by the user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Auth"
                ],
                "summary": "Validate 2FA code",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003caccess token\u003e",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "TwoFactor Validate Request",
                        "name": "request",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.AuthTwoFactorValidateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "2FA code validated successfully",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    }
                }
            }
        },
        "/profile": {
            "get": {
                "description": "List all profiles",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "List profiles",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003caccess token\u003e",
                        "name": "Authorization",
                        "in": "header"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "array",
                            "items": {
                                "$ref": "#/definitions/domain.Profile"
                            }
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    }
                }
            }
        },
        "/profile/{id}": {
            "get": {
                "description": "Get a profile by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Get a profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003caccess token\u003e",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Profile ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Profile"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a profile's details by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Profile"
                ],
                "summary": "Update a profile",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003caccess token\u003e",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Profile ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "Profile Update Request",
                        "name": "profile",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.ProfileUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.Profile"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    }
                }
            }
        },
        "/user": {
            "get": {
                "description": "Get a page of user",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get a page",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003caccess token\u003e",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "description": "Page limit",
                        "name": "limit",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Sort by",
                        "name": "sort",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Name",
                        "name": "name",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by Address",
                        "name": "address",
                        "in": "query"
                    },
                    {
                        "type": "string",
                        "description": "Search by UserType",
                        "name": "usertype",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/hRepository.Paginator"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    }
                }
            },
            "post": {
                "description": "Create a new user with the provided details",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003caccess token\u003e",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "description": "User Create Request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UserCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    }
                }
            }
        },
        "/user/{id}": {
            "get": {
                "description": "Get a user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Get a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003caccess token\u003e",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    }
                }
            },
            "put": {
                "description": "Update a user's details by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Update a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003caccess token\u003e",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User Update Request",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/domain.UserUpdateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    }
                }
            },
            "delete": {
                "description": "Delete a user by ID",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "Delete a user",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Bearer \u003caccess token\u003e",
                        "name": "Authorization",
                        "in": "header"
                    },
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/domain.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "$ref": "#/definitions/hResp.DefaultResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "domain.AuthSignInRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                }
            }
        },
        "domain.AuthTwoFactorGenerateRequest": {
            "type": "object",
            "properties": {
                "method": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "domain.AuthTwoFactorValidateRequest": {
            "type": "object",
            "properties": {
                "code": {
                    "type": "string"
                },
                "token": {
                    "type": "string"
                }
            }
        },
        "domain.Profile": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "boolean"
                },
                "avgDelivery": {
                    "type": "number"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "description": {
                    "type": "string"
                },
                "instagramFollowers": {
                    "type": "integer"
                },
                "languages": {
                    "type": "string"
                },
                "lastDelivery": {
                    "type": "string"
                },
                "level": {
                    "type": "integer"
                },
                "location": {
                    "type": "string"
                },
                "phoneType": {
                    "type": "string"
                },
                "portfolio": {
                    "type": "string"
                },
                "rating": {
                    "type": "number"
                },
                "requests": {
                    "type": "integer"
                },
                "returnRate": {
                    "type": "number"
                },
                "skills": {
                    "type": "string"
                },
                "specializations": {
                    "type": "string"
                },
                "successRate": {
                    "type": "number"
                },
                "tiktokFollowers": {
                    "type": "integer"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                },
                "youtubeFollowers": {
                    "type": "integer"
                }
            }
        },
        "domain.ProfileUpdateRequest": {
            "type": "object",
            "properties": {
                "availability": {
                    "type": "boolean"
                },
                "description": {
                    "type": "string"
                },
                "languages": {
                    "type": "string"
                },
                "location": {
                    "type": "string"
                },
                "phone_type": {
                    "type": "string"
                },
                "portfolio": {
                    "type": "string"
                },
                "skills": {
                    "type": "string"
                },
                "specializations": {
                    "type": "string"
                },
                "userID": {
                    "type": "integer"
                }
            }
        },
        "domain.User": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "createdAt": {
                    "type": "string"
                },
                "deletedAt": {
                    "$ref": "#/definitions/gorm.DeletedAt"
                },
                "email": {
                    "type": "string"
                },
                "firstName": {
                    "type": "string"
                },
                "hashedPassword": {
                    "type": "string"
                },
                "id": {
                    "type": "integer"
                },
                "lastCode": {
                    "type": "string"
                },
                "lastName": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "profile": {
                    "$ref": "#/definitions/domain.Profile"
                },
                "taxNumber": {
                    "type": "string"
                },
                "updatedAt": {
                    "type": "string"
                },
                "userType": {
                    "type": "string"
                }
            }
        },
        "domain.UserCreateRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "tax_number": {
                    "type": "string"
                },
                "user_type": {
                    "type": "string"
                }
            }
        },
        "domain.UserUpdateRequest": {
            "type": "object",
            "properties": {
                "address": {
                    "type": "string"
                },
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "password": {
                    "type": "string"
                },
                "phone": {
                    "type": "string"
                },
                "tax_number": {
                    "type": "string"
                },
                "user_type": {
                    "type": "string"
                }
            }
        },
        "gorm.DeletedAt": {
            "type": "object",
            "properties": {
                "time": {
                    "type": "string"
                },
                "valid": {
                    "description": "Valid is true if Time is not NULL",
                    "type": "boolean"
                }
            }
        },
        "hRepository.Paginator": {
            "type": "object",
            "properties": {
                "limit": {
                    "type": "integer"
                },
                "page": {
                    "type": "integer"
                },
                "rows": {},
                "sort": {
                    "type": "string"
                },
                "total_pages": {
                    "type": "integer"
                },
                "total_rows": {
                    "type": "integer"
                }
            }
        },
        "hResp.DefaultResponse": {
            "description": "Default response structure",
            "type": "object",
            "properties": {
                "message": {
                    "type": "string"
                }
            }
        },
        "hToken.Access": {
            "type": "object",
            "properties": {
                "access_token": {
                    "type": "string"
                },
                "refresh_token": {
                    "type": "string"
                }
            }
        }
    },
    "externalDocs": {
        "url": "https://github.com/flambra/account"
    }
}